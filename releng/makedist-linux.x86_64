#!/bin/sh
#
# create an OMNeT++/OMNEST source distribution package for Linux
# in: SOURCE_DISTRIBUTION_BASE_NAME (1st arg optionally) contains the source file name (minus the .tgz extension)
#     (placed in DISTDIR) that is used as a source for the windows build
# in: TOOLS_DIR - the directory storing the platform specific binaries (toolchain etc.) (without the version and the last platform specific segment!)
# in: VERSION - the version suffix used in the build (i.e. 5.0b3)

if [ "$1" != "" ]; then
   SOURCE_DISTRIBUTION_BASE_NAME=$1
fi
if test -z "$SOURCE_DISTRIBUTION_BASE_NAME"; then
  echo "SOURCE_DISTRIBUTION_BASE_NAME environment variable is not specified!"; exit 1;
fi

if test -z "$TOOLS_DIR"; then
  echo "TOOLS_DIR environment variable is not specified!"; exit 1;
fi

if test -z "$VERSION"; then
  echo "VERSION environment variable is not specified!"; exit 1;
fi

if [ "$what" != "omnest" ]; then
    what="omnetpp"
fi

cd $(dirname $0)/..
OMNETPP_ROOT=$(pwd)

# the directory where the distribution file will created
DISTDIR=$OMNETPP_ROOT/out/dist

if [ -d $DISTDIR/$what-$VERSION ]; then
    echo "Deleting old target directory: $DISTDIR/$what-$VERSION !"
    rm -rf $DISTDIR/$what-$VERSION
fi

# extract the source archive
echo "Extracting source distribution: $SOURCE_DISTRIBUTION_BASE_NAME.tgz "
cd $DISTDIR
tar xfz $SOURCE_DISTRIBUTION_BASE_NAME.tgz || { echo --- error extracting source ---; exit 1;}

# cd into the extracted source achive dir
cd $what-$VERSION || exit 1

echo "Preparing to create distribution package: $what, version: $VERSION platform: linux x86_64..."

# Prepare IDE
cp -rlf ide/linux-x86_64/* ide
rm -rf ide/win32-x86_64 ide/linux-x86_64 ide/macosx-x86_64

# pack the distro
cd ..
# create linux version - tgz archive
export SOURCE_DISTRIBUTION_NAME_LINUX=$SOURCE_DISTRIBUTION_BASE_NAME-linux-x86_64.tgz
echo Creating $DISTDIR/$SOURCE_DISTRIBUTION_NAME_LINUX
tar cfz $SOURCE_DISTRIBUTION_NAME_LINUX $what-$VERSION || { echo --- error creating src-linux-x86_64.tgz ---; exit 1;}

# delete the source stuff
rm -rf $what-$VERSION
