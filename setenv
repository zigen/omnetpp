#!/usr/bin/env -S sh -c "echo >&2 \"Error: You are running this script instead of sourcing it. Make sure to use it as 'source setenv' or '. setenv', otherwise its settings won't take effect.\"; exit 1"

# first argument can be (e.g. 'source setenv -q'):
# -q : do not show banner text on configuration success
# -r : remove an already configured environment

# Get the directory where this script reside using a trick (works differently on bash and zsh)
# On bash, the current script's name is in 'BASH_SOURCE[0]'
if [ "$BASH_VERSION" != "" ]; then # for BASH
  dir=$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)
elif [ "$ZSH_VERSION" != "" ]; then # on zsh the script name is in '$0'
  dir=$(cd $(dirname $0) && pwd)
else # on any other SH compatible shell we assume that the current working directory is the OMNeT++ root directory
  dir=$(pwd)
fi

# check if dir is really pointing to an omnet++ installation dir
if [ ! -f $dir/configure.user -o ! -f $dir/include/omnetpp.h -o ! -f $dir/Version ]; then
    echo "Error: '$dir' does not look like an OMNeT++ root directory"
    return 1
fi

# remove previous environment to prevent the accumulation of path elements
if [ -n "$__omnetpp_root_dir" ]; then
  if [ "$1" = "-r" ]; then
    echo "Removed previous environment for '$__omnetpp_root_dir'."
    dir=
  else
    echo "Warning: overwriting previous environment for '$__omnetpp_root_dir'."
  fi
  export PATH=${PATH#$__omnetpp_root_dir/bin:}
  export __omnetpp_root_dir=
  export OMNETPP_RELEASE=
  export QT_SELECT=
  export QT_LOGGING_RULES=
fi

# do not continue if removal was requested
if [ "$1" = "-r" ]; then
    return 0
fi

if [ $(uname) = "Darwin" ]; then
  if [ ! -d $dir/tools/macosx ]; then
      echo "Error: We are running on macOS, but you seem to have downloaded the Linux or Windows version of the installation package!"
      return 1
  else
      if [ $(arch) = "arm64" ]; then
        echo "NOTE: We are running on an Apple M processor which is not supported natively."
        echo "Turning on x86_64 emulation by starting a new shell with 'arch -x86_64 /bin/zsh -i' ..."
        export dir; arch -x86_64 /bin/zsh -c 'source $dir/setenv; zsh -i'
        return 1
      else
        cd $dir/tools/macosx && source setenv ; cd - >/dev/null
      fi
  fi
fi

export __omnetpp_root_dir=$dir
export OMNETPP_RELEASE=$(cat $__omnetpp_root_dir/Version)
export PATH=$__omnetpp_root_dir/bin:$PATH
export HOSTNAME
export HOST
export QT_SELECT=5 # on systems with qtchooser, switch to Qt5
export QT_LOGGING_RULES='*.debug=false;qt.qpa.*=false' # disable some annoying qt logging
dir=

if [ "$1" != "-q" ]; then
  echo "Environment for '$OMNETPP_RELEASE' in directory '$__omnetpp_root_dir' is ready."
fi
