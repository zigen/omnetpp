%description:
Tests autoWarmupFilter=false in @statistic(). Test backported from OMNeT++ 6.0.

%file: test.ned

import testlib.Dump;

module Node
{
    @statistic[a1](record=mean);
    @statistic[a2](record=mean;autoWarmupFilter=true); // no-op
    @statistic[a3](record=mean;autoWarmupFilter=false);
    //@statistic[a4](record=warmup(mean);autoWarmupFilter=false); ==> ERROR: Result recorder "warmup" not found
    @statistic[a4](record=last(warmup(mean));autoWarmupFilter=false);

    //@statistic[b1](record=min+max); ==> ERROR: Bad recording mode 'min+max': Expression may only refer to one signal  (note: it thinks "min" and "max" are signals)
    //@statistic[b2](record=min+max;autoWarmupFilter=false); ==> ditto
    //@statistic[b3](record=min+warmup(max);autoWarmupFilter=false); ==> ditto
    //@statistic[b4](record=warmup(min+max);autoWarmupFilter=false); ==> ditto

    //@statistic[b1](record=min(b1)+max(b1)); ==> ERROR: Result filter "b1" not found  (solution: move expression into "source=" part, and add "record=last")
    @statistic[b1](source=min(b1)+max(b1);record=last);
    //@statistic[b2](source=min(b2)+max(b2);record=last;autoWarmupFilter=false); ==> ERROR: Cannot use a signal more than once in a statistics source expression
    //@statistic[b3](source=min(b3)+warmup(max(b3));record=last;autoWarmupFilter=false); ==> ditto
    //@statistic[b4](source=warmup(min(b4)+max(b4));record=last;autoWarmupFilter=false); ==> ditto
}

network Test
{
    submodules:
        node: Node;
}

%inifile: test.ini
[General]
network = Test
debug-statistics-recording = true
warmup-period = 10s

%subst: /omnetpp:://
%subst: /signalID=\d+/signalID=_/

%contains: stdout
Test.node (Node):
    "b1" (signalID=_):
        WarmupPeriodFilter
            MinFilter
                <signalvalue> + <signalvalue> (NaryExpressionFilter)
                    LastValueRecorder ==> b1:last
        WarmupPeriodFilter
            MaxFilter
                <signalvalue> + <signalvalue> (NaryExpressionFilter)
                    LastValueRecorder ==> b1:last
    "a4" (signalID=_):
        MeanFilter
            WarmupPeriodFilter
                LastValueRecorder ==> a4:last(warmup(mean))
    "a3" (signalID=_):
        MeanRecorder ==> a3:mean
    "a2" (signalID=_):
        WarmupPeriodFilter
            MeanRecorder ==> a2:mean
    "a1" (signalID=_):
        WarmupPeriodFilter
            MeanRecorder ==> a1:mean

